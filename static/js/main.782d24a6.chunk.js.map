{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/comments.ts","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["PostsList","posts","setSelectedPostId","selectedPostId","className","map","post","userId","title","type","onClick","id","NewCommentForm","addComment","useState","name","body","email","comment","setComment","handleChange","event","value","onSubmit","preventDefault","length","placeholder","onChange","e","target","BASE_URL","request","url","fetch","then","response","ok","Error","status","statusText","json","getPostComments","postId","PostDetails","setPost","comments","setComments","hidden","setHidden","useEffect","setter","a","fetchedPost","fetchedComments","removeComment","commentId","method","deleteComment","preComments","filter","preComment","classNames","headers","JSON","stringify","postComment","result","App","setPosts","selectedUserId","setSelectedUserId","postSetter","fetchedPosts","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.782d24a6.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  setSelectedPostId: (selectedPostId: number | null) => void,\n  selectedPostId: number | null,\n};\n\nexport const PostsList: React.FC<Props> = ({ posts, setSelectedPostId, selectedPostId }) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n                {' '}\n              </b>\n              {post.title}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                setSelectedPostId(post.id === selectedPostId\n                  ? null\n                  : post.id);\n              }}\n            >\n              {post.id === selectedPostId\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addComment: (\n    name: string,\n    email: string,\n    body: string\n  ) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addComment }) => {\n  const [comment, setComment] = useState({\n    name: '',\n    body: '',\n    email: '',\n  });\n\n  const handleChange = (event: { name: string; value: string; }) => {\n    const { name, value } = event;\n\n    setComment({\n      ...comment,\n      [name]: value,\n    });\n  };\n\n  const { name, email, body } = comment;\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        if (name.length > 0 && email.length > 0 && body.length > 0) {\n          addComment(name, email, body);\n          setComment({\n            name: '',\n            email: '',\n            body: '',\n          });\n        }\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => handleChange(e.target)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => handleChange(e.target)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => handleChange(e.target)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import { request, BASE_URL } from './api';\n\nexport const getPostComments = (postId: number | null) => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const deleteComment = (commentId: number | null) => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n\nexport const postComment = (postId: number | null, name: string, email: string, body: string) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment, postComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number | null;\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [post, setPost] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    const setter = async () => {\n      const fetchedPost = await getPostDetails(selectedPostId);\n      const fetchedComments = await getPostComments(selectedPostId);\n\n      setPost(fetchedPost);\n      setComments(fetchedComments);\n    };\n\n    setter();\n  }, [selectedPostId]);\n\n  const removeComment = (commentId: number) => {\n    deleteComment(commentId);\n    setComments((preComments) => preComments\n      .filter(preComment => preComment.id !== commentId));\n  };\n\n  const addComment = (name: string, email: string, body: string) => {\n    postComment(selectedPostId, name, email, body)\n      .then(() => getPostComments(selectedPostId)\n        .then(result => setComments(result)));\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post && post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setHidden(!hidden)}\n          >\n            {!hidden\n              ? `Hide ${comments.length} comments`\n              : `Show ${comments.length} comments`}\n          </button>\n        )}\n\n        <ul className=\"PostDetails__list\">\n          {comments && comments.map(comment => (\n            <li\n              key={comment.id}\n              className={classNames('PostDetails__list-item', { 'PostDetails__list-item--hidden': hidden })}\n            >\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n                onClick={() => removeComment(comment.id)}\n              >\n                X\n              </button>\n              <p>{comment.body}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUserPosts = (userId: number) => {\n  if (userId === 0) {\n    return request('/posts');\n  }\n\n  return request(`/posts?userId=${userId}`);\n};\n\nexport const getPostDetails = (postId: number | null) => {\n  return request(`/posts/${postId}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState<number | null>(null);\n\n  useEffect(() => {\n    const postSetter = async () => {\n      const fetchedPosts = await getUserPosts(selectedUserId);\n\n      setPosts(fetchedPosts);\n    };\n\n    postSetter();\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"someName\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"someName\"\n            className=\"App__user-selector\"\n            onChange={(e) => setSelectedUserId(+e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPostId\n          && (\n            <div className=\"App__content\">\n              <PostDetails selectedPostId={selectedPostId} />\n            </div>\n          )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}